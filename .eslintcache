[{"C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\index.js":"1","C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\App.js":"2","C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\reportWebVitals.js":"3","C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\components\\MenuComponent.js":"4","C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\shared\\dishes.js":"5","C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\components\\DishDetailComponent.js":"6","C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\components\\MainComponent.js":"7","C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\components\\HeaderComponent.js":"8","C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\components\\FooterComponent.js":"9","C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\components\\HomeComponent.js":"10","C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\components\\ContactComponent.js":"11","C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\shared\\promotions.js":"12","C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\shared\\comments.js":"13","C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\shared\\leaders.js":"14","C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\components\\AboutComponent.js":"15","C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\redux\\configureStore.js":"16","C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\redux\\reducer.js":"17"},{"size":591,"mtime":1608836955640,"results":"18","hashOfConfig":"19"},{"size":511,"mtime":1610461600191,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":1384,"mtime":1609186873318,"results":"22","hashOfConfig":"19"},{"size":1490,"mtime":1609183687765,"results":"23","hashOfConfig":"19"},{"size":2247,"mtime":1609187109618,"results":"24","hashOfConfig":"19"},{"size":2159,"mtime":1610462025500,"results":"25","hashOfConfig":"19"},{"size":5104,"mtime":1610390973403,"results":"26","hashOfConfig":"19"},{"size":2633,"mtime":1609071424029,"results":"27","hashOfConfig":"19"},{"size":1056,"mtime":1609184170953,"results":"28","hashOfConfig":"19"},{"size":9716,"mtime":1610385135737,"results":"29","hashOfConfig":"19"},{"size":445,"mtime":1609183637425,"results":"30","hashOfConfig":"19"},{"size":4279,"mtime":1609183614263,"results":"31","hashOfConfig":"19"},{"size":2382,"mtime":1609183624959,"results":"32","hashOfConfig":"19"},{"size":4233,"mtime":1609192092944,"results":"33","hashOfConfig":"19"},{"size":200,"mtime":1610461434804,"results":"34","hashOfConfig":"19"},{"size":455,"mtime":1610461464386,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1hzl1d5",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\index.js",[],["74","75"],"C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\App.js",[],"C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\shared\\dishes.js",[],"C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\components\\DishDetailComponent.js",[],"C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\components\\MainComponent.js",["76"],"C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\components\\HeaderComponent.js",["77"],"import { react, Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron,Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                        \r\n                    \r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;","C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\components\\ContactComponent.js",["78"],"import React, {Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            firstName: '',\r\n            lastName:'',\r\n            telNum:'',\r\n            email:'',\r\n            agree: false,\r\n            contactType:'Tel.',\r\n            message:'',\r\n            touched: {\r\n                firstName: false,\r\n                lastName: false,\r\n                telNum: false,\r\n                email: false\r\n            }\r\n\r\n        }\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n    validate(firstName, lastName, telNum, email) {\r\n        const errors = {\r\n            firstName: '',\r\n            lastName: '',\r\n            telNum: '',\r\n            email: ''\r\n        };\r\n\r\n        if (this.state.touched.firstName && firstName.length < 3)\r\n            errors.firstName = 'First Name should be >= 3 characters';\r\n        else if (this.state.touched.firstName && firstName.length > 10)\r\n            errors.firstName = 'First Name should be <= 10 characters';\r\n\r\n        if (this.state.touched.lastName && lastName.length < 3)\r\n            errors.lastName = 'Last Name should be >= 3 characters';\r\n        else if (this.state.touched.lastName && lastName.length > 10)\r\n            errors.lastName = 'Last Name should be <= 10 characters';\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.telNum && !reg.test(telNum))\r\n            errors.telNum = 'Tel. Number should contain only numbers';\r\n\r\n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n            errors.email = 'Email should contain a @';\r\n\r\n        return errors;\r\n    }\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log('Current State is: ' + JSON.stringify(this.state));\r\n        alert('Current State is: ' + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n    render(){\r\n        const errors = this.validate(this.state.firstName, this.state.lastName, this.state.telNum, this.state.email);\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-19\">\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup row>\r\n                           <Label htmlFor=\"firstName\" md={2}>First Name: </Label>\r\n                           <Col md={10}>\r\n                               <Input type=\"text\" id=\"firstName\" name=\"firstName\" placeholder=\"First Name\" value={this.state.firstName} valid={errors.firstName === ''}\r\n                                        invalid={errors.firstName !== ''}\r\n                                        onBlur={this.handleBlur('firstName')}  onChange={this.handleInputChange}/> <FormFeedback>{errors.firstName}</FormFeedback>                 </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                           <Label htmlFor=\"lastName\" md={2}>Last Name: </Label>\r\n                           <Col md={10}>\r\n                               <Input type=\"text\" id=\"lastName\" name=\"lastName\" placeholder=\"Last Name\" value={this.state.lastName} valid={errors.lastName === ''}  invalid={errors.lastName !== ''}\r\n                                        onBlur={this.handleBlur('lastName')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.lastName}</FormFeedback></Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                           <Label htmlFor=\"telNum\" md={2}>Telphone Number: </Label>\r\n                           <Col md={10}>\r\n                               <Input type=\"tel\" id=\"telNum\" name=\"telNum\" placeholder=\"Telephone Number\" value={this.state.telNum} valid={errors.telNum === ''} invalid={errors.telNum!== ''}\r\n                                        onBlur={this.handleBlur('telNum')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.telNum}</FormFeedback> </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                           <Label htmlFor=\"email\" md={2}>Email: </Label>\r\n                           <Col md={10}>\r\n                               <Input type=\"email\" id=\"email\" name=\"email\" placeholder=\"email\" value={this.state.email}  onChange={this.handleInputChange}/>                    </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                            <Col md={{size: 6, offset: 2}}>\r\n                                <FormGroup check>\r\n                                    <Label check>\r\n                                        <Input type=\"checkbox\" name=\"agree\" checked={this.state.agree}  onChange={this.handleInputChange}/>{''}\r\n                                        <strong>May we contact you?</strong>\r\n                                    </Label>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col md={{size: 3, offset: 1}}>\r\n                            <Input type=\"select\" name=\"contactType\" value={this.state.contactType} valid={errors.email === ''}\r\n                                        invalid={errors.email !== ''}\r\n                                        onBlur={this.handleBlur('email')}\r\n                                        onChange={this.handleInputChange} >\r\n                                <option>Tel.</option>\r\n                                <option>Email</option>\r\n                            </Input>\r\n                                    <FormFeedback>{errors.email}</FormFeedback>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup row>\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        value={this.state.message}\r\n                                        onChange={this.handleInputChange}></Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        <FormGroup row>\r\n                            <Col md={{size: 10, offset: 2}}>\r\n                                <Button type=\"submit\" color=\"primary\" >Send Feedback</Button>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n   \r\n}\r\n\r\nexport default Contact;","C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\shared\\comments.js",[],"C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\shared\\leaders.js",[],["79","80"],"C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\redux\\configureStore.js",[],"C:\\Users\\aball\\OneDrive\\Desktop\\fullstack react\\React\\confusion\\src\\redux\\reducer.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":23,"column":3,"nodeType":"87","messageId":"88","endLine":25,"endColumn":4},{"ruleId":"89","severity":1,"message":"90","line":1,"column":10,"nodeType":"91","messageId":"92","endLine":1,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":109,"column":29,"nodeType":"95","endLine":109,"endColumn":71},{"ruleId":"81","replacedBy":"96"},{"ruleId":"83","replacedBy":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["98"],["99"],"no-global-assign","no-unsafe-negation"]